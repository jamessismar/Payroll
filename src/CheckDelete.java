import  java.awt.event.ActionListener;
import  java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import  java.sql.Connection;
import  java.sql.PreparedStatement;
import  java.sql.ResultSet;
import  java.sql.SQLException;     
import  java.sql.Statement;
import java .util.ArrayList;
import  java.util.logging.Level;     
import  java.util.logging.Logger;    
import  javax.swing.JOptionPane; 
import  javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;
import javax.swing.table.DefaultTableModel;

public class CheckDelete extends javax.swing.JFrame implements ActionListener,MouseListener {

    /**
     * Creates new form CheckDelete
     */
    public CheckDelete() {
        initComponents();
        showEmployeeFromTable();
    }

    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        id02 = new javax.swing.JTextField();
        name02 = new javax.swing.JTextField();
        gender02 = new javax.swing.JTextField();
        address02 = new javax.swing.JTextField();
        balance02 = new javax.swing.JTextField();
        position02 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        updateEmployee = new javax.swing.JButton();
        deleteEmployee = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        id02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        id02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(id02);
        id02.setBounds(190, 140, 160, 30);

        name02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        name02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(name02);
        name02.setBounds(190, 190, 160, 30);

        gender02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        gender02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(gender02);
        gender02.setBounds(190, 240, 160, 30);

        address02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        address02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(address02);
        address02.setBounds(190, 290, 160, 30);

        balance02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        balance02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(balance02);
        balance02.setBounds(190, 340, 160, 30);

        position02.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        position02.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(position02);
        position02.setBounds(190, 390, 160, 30);

        jLabel2.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel2.setText("EMPLOYEE  INFORMATION");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 80, 280, 20);

        jLabel3.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel3.setText("ID:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(70, 145, 40, 20);

        jLabel4.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel4.setText("EMPLOYEE NAME:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 200, 130, 15);

        jLabel5.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel5.setText("BALANCE:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 350, 80, 15);

        jLabel6.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel6.setText("POSITION :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(50, 400, 80, 15);

        jLabel7.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel7.setText("ADDRESS :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(50, 300, 80, 15);

        jLabel8.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        jLabel8.setText("GENDER :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(50, 250, 80, 15);

        cancel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel);
        cancel.setBounds(500, 620, 80, 23);

        updateEmployee.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        updateEmployee.setText("UPDATE");
        updateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmployeeActionPerformed(evt);
            }
        });
        jPanel1.add(updateEmployee);
        updateEmployee.setBounds(310, 620, 74, 23);

        deleteEmployee.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        deleteEmployee.setText("DELETE");
        deleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeActionPerformed(evt);
            }
        });
        jPanel1.add(deleteEmployee);
        deleteEmployee.setBounds(410, 620, 72, 23);

        jPanel2.setBackground(new java.awt.Color(51, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/employeee-removebg-preview.png"))); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, -5, 430, -1));

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 600, 80);

        employeeTable.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "NAME"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 440, 590, 160);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
      int index = employeeTable.getSelectedRow();
      ShowItem(index);
      
    }//GEN-LAST:event_employeeTableMouseClicked

    private void deleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeActionPerformed
    String EmployeeName = name02.getText();
    try {
    if (EmployeeName.equals("")){
    JOptionPane.showMessageDialog(null, "No Employee is Selected");
    }
    else{
    
     Connection Conn = main.getConnection();
     Statement stmt = Conn.createStatement();
     
     
     
      String sql ="DELETE FROM employeedata where employeename = '" +EmployeeName+"'";
      String msg = "Employee  was removed from the Company[!]"; 
      stmt.executeUpdate(sql);
      JOptionPane.showMessageDialog(null, msg);
      showEmployeeFromTable();
      
    }
    
    }catch (SQLException e){
    String retry = "Please Try Again[!]";
    JOptionPane.showMessageDialog(null, retry);
    }
        
        
        
        
        
    }//GEN-LAST:event_deleteEmployeeActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
        new aLoginSuccessfully().setVisible(true);
    }//GEN-LAST:event_cancelActionPerformed

    private void updateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmployeeActionPerformed
       try{
         String UpdateQuery = null;
         PreparedStatement ps = null;
         Connection conn = main.getConnection();
         
         UpdateQuery = "UPDATE employeedata SET employeename(employee_name =?,gender =?,address =?,balance =?,employeeposition =? Where id =?)" ;
         ps= conn.prepareCall(UpdateQuery);
         
         
         ps.setString(1,name02.getText());
         ps.setString(2, this.balance02.getText());
         ps.setString(3,position02.getText());       
         ps.setString(4,balance02.getText());     
         ps.setString(5,position02.getText());     
         ps.setString(6,id02.getText());  
         
         
         ps.executeUpdate();
         JOptionPane.showMessageDialog(null, "Employee Details Updated");
         showEmployeeFromTable();    
            }

    catch(SQLException e){
      
      Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,e);
      }
    }//GEN-LAST:event_updateEmployeeActionPerformed

    
    
    MainClass main = new MainClass();
    
    
    
    public ArrayList<EmployeeInfo> getEmployeeList(){


    ArrayList<EmployeeInfo> employeeList = new ArrayList<EmployeeInfo>();   
   
     Connection Conn = main.getConnection();
      String sql ="Select * from employeedata";
      Statement stmt;
      ResultSet rs;
      
      
       try{
          stmt = Conn.createStatement();
          rs = stmt.executeQuery(sql);
          EmployeeInfo employeeinfo;
          
          while (rs.next()){
              
              employeeinfo = new EmployeeInfo(Integer.parseInt(rs.getString("id")),  rs.getString("employeename"), rs.getString("gender"), rs.getString("address"), Double.parseDouble(rs.getString("balance")),rs.getString("employeeposition"));
              employeeList.add(employeeinfo);                                                                                                                                                                                       
          }                                                                                                                                                                                                                                                     
          }
      catch(SQLException e){
      
      Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,e);
      }
      return employeeList;








}
    
    
   public void showEmployeeFromTable(){
   ArrayList<EmployeeInfo> list = getEmployeeList();
   DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
   
   model.setRowCount(0);
   Object[] row = new Object[6];
   for (int x = 0 ; x<list.size(); x++){
   
   row[0] = list.get(x).getid();
   row[1] = list.get(x).getemployeeName();
   row[2] = list.get(x).getgender();
   row[3] = list.get(x).getaddress();
   row[4] = list.get(x).getBalance();
   row[5] = list.get(x).getPosition();
   model.addRow(row);
        
   
   }
   
   }
   
  public void ShowItem(int index){
  
      id02.setText(Integer.toString(getEmployeeList().get(index).getid()));
      name02.setText(getEmployeeList().get(index).getemployeeName());
      gender02.setText(getEmployeeList().get(index).getgender());
      address02.setText(getEmployeeList().get(index).getaddress());         
      balance02.setText(Double.toHexString(getEmployeeList().get(index).getBalance()));
      position02.setText(getEmployeeList().get(index).getPosition());
      
      
  
  
  }
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try{
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
      if ("Nimbus".equals(info.getName())){
      javax.swing.UIManager.setLookAndFeel(info.getClassName());
      break;
      }
      }
      }  
      catch (ClassNotFoundException ex){
       java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,ex);
      }
      catch (InstantiationException ex){
       java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,ex);
      }
      catch (IllegalAccessException ex){
       java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,ex);
      }
      catch (javax.swing.UnsupportedLookAndFeelException ex){
       java.util.logging.Logger.getLogger(CheckDelete.class.getName()).log(Level.SEVERE,null,ex);
      }
        
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address02;
    private javax.swing.JTextField balance02;
    private javax.swing.JButton cancel;
    private javax.swing.JButton deleteEmployee;
    private javax.swing.JTable employeeTable;
    private javax.swing.JTextField gender02;
    private javax.swing.JTextField id02;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name02;
    private javax.swing.JTextField position02;
    private javax.swing.JButton updateEmployee;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mousePressed(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
